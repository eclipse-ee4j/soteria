<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2022, 2022 Contributors to the Eclipse Foundation.
    Copyright (c) 2015, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
       <groupId>org.glassfish.soteria</groupId>
       <artifactId>parent</artifactId>
       <version>3.0.3-SNAPSHOT</version>
    </parent>

    <groupId>org.glassfish.soteria.test</groupId>
    <artifactId>parent</artifactId>
    <packaging>pom</packaging>

    <name>Soteria Integration Tests and Examples</name>

    <!-- 
                M O D U L E S
                
                Each module represent a different test, with the exception of the "common"
                module which contains utility code.  
                
    -->
    <modules>
        <module>common</module>

        <module>app-securitycontext</module>
        <module>app-securitycontext-auth</module>
        <module>app-securitycontext-customprincipal</module>

        <!-- app-[identity-store] -->
        <module>app-mem</module>
        <module>app-db</module>
        <module>app-ldap</module>
        <module>app-ldap2</module>
        <module>app-ldap3</module>
        <module>app-custom</module>
        <module>app-multiple-store</module>
        <module>app-multiple-store-backup</module>
        
        <!-- app-[authentication mechanism] (with build-in identity store) -->
        <module>app-openid</module>
        <module>app-openid2</module>
        <module>app-openid3</module>

        <!-- app-[identity-store]-[authentication mechanism] -->
        <module>app-mem-basic</module>
        <module>app-mem-basic-decorate</module>
        <module>app-mem-form</module>
        <module>app-mem-customform</module>

        <!-- app-[identity-store]-[service] -->
        <module>app-custom-session</module>
        <module>app-custom-rememberme</module>

        <module>app-custom-identity-store-handler</module>

        <module>app-jaxrs</module>
    </modules>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <!-- Test servers -->
        <glassfish.version>7.0.0-SNAPSHOT</glassfish.version>
        
        
        <!-- Below Servers need to be updated to their Jakarta.* versions and currently don't work -->
        
        <!-- Note: Payara 5.194 has EE Security (Soteria) included, and can be updated via this pom -->
        <payara.version>6.2021.1.Alpha1</payara.version>
        
        <!-- Note: WildFly 13 has EE Security (Soteria) included, but not activated -->
        <wildfly.version>12.0.0.Final</wildfly.version>
        
        <tomee.version>7.0.4</tomee.version>
        
        <!-- Note: Liberty 18.0.0.2 has EE Security included -->
        <openliberty.version>18.0.0.1</openliberty.version>
        
        <security-api.version>${api_dependency_version}</security-api.version>
        <soteria.version>${project.version}</soteria.version>
        <weld-decorator.version>${project.version}</weld-decorator.version>
        
        
        <arquillian-glassfish-managed-3.1.version>1.0.2</arquillian-glassfish-managed-3.1.version>
        <arquillian-glassfish-embedded-3.1.version>1.0.2</arquillian-glassfish-embedded-3.1.version>
        <arquillian-glassfish-remote-3.1.version>1.0.2</arquillian-glassfish-remote-3.1.version>
        <arquillian-payara-server-managed.version>2.3.1</arquillian-payara-server-managed.version>
        <wildfly-arquillian-container-managed.version>2.1.0.Final</wildfly-arquillian-container-managed.version>
		
        <jacc-provider.version>0.3</jacc-provider.version>
        
        <buildDirectory>${project.basedir}/target</buildDirectory>
        <foo>${session.executionRootDirectory}</foo>
        <failsafe-plugin.version>3.0.0-M4</failsafe-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.7.0.Alpha10</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-container-test-api</artifactId>
                <version>1.7.0.Alpha10</version>
            </dependency>
            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>payara-client-ee8</artifactId>
                <version>2.3.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
	            <groupId>com.unboundid</groupId>
	            <artifactId>unboundid-ldapsdk</artifactId>
	            <version>6.0.3</version>
	        </dependency>
	        <dependency>
	            <groupId>com.h2database</groupId>
	            <artifactId>h2</artifactId>
	            <version>2.1.210</version>
	        </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>jakarta.faces</groupId>
            <artifactId>jakarta.faces-api</artifactId>
            <version>4.0.0</version>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>3.0.1</version>
        </dependency>
        
        
        <!-- Test dependencies which can be used in sub-modules -->
    
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        
         <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.59.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.14.3</version>
            <!--$NO-MVN-MAN-VER$-->
        </dependency>
    </dependencies>

    <repositories>
    
        <!-- Make sure Maven central is consulted first -->
        <repository>
            <id>central</id>
            <name>Central Repository</name>

            <url>https://repo.maven.apache.org/maven2</url>

            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
    	<directory>${buildDirectory}</directory>
    
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M4</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <finalName>${project.build.finalName}</finalName>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- 
    
            P R O F I L E S
            
            There's two types of profiles:
            
            1. Profiles that say which libraries should be included, or whether the libraries
               are provided by the server
            2. The server against which the tests should be done
    
     -->
    <profiles>
        <!--
            This profile assumes a target that already has the Soteria libraries.
            In Jakarta EE 9+ that would be the default. E.g. in the case of GlassFish/Payara
            a jakarta.security.enterprise.jar in [gf_home]/glassfish/modules
          -->
        <profile>
            <id>provided</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                   <groupId>jakarta.security.enterprise</groupId>
                   <artifactId>jakarta.security.enterprise-api</artifactId>
                   <version>${api_dependency_version}</version>
                   <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>


        <!--
            This profile assumes a target that does not have the Soteria libraries.
            E.g. a Jakarta EE 10 Servlet container such as Tomcat or Jetty.

            With this profile e.g. jakarta.security.enterprise-3.0.0.jar
            will end up in WEB-INF/lib
        -->
        <profile>
            <id>bundled</id>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish.soteria</groupId>
                    <artifactId>jakarta.security.enterprise</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>
        
        <profile>
            <id>weld-decorator-bundled</id>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish.soteria</groupId>
                    <artifactId>soteria.spi.bean.decorator.weld</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile> 
        
        
        
        <!-- ### GlassFish ### -->
       
        <profile>
            <id>glassfish-ci-managed</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <glassfish.root>${maven.multiModuleProjectDirectory}/target</glassfish.root>
            </properties>

            <dependencies>
                <!-- The actual Arquillian connector -->
                <dependency>
                    <groupId>org.omnifaces.arquillian</groupId>
                    <artifactId>arquillian-glassfish-server-managed</artifactId>
                    <version>1.0</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${glassfish.root}</outputDirectory>
                                    <markersDirectory>${glassfish.root}/dependency-maven-plugin-markers</markersDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.glassfish.main.distributions</groupId>
                                            <artifactId>glassfish</artifactId>
                                            <version>${glassfish.version}</version>
                                            <type>zip</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${glassfish.root}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                        <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>set-suspend</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo level="info">Replacing in ${glassfish.root}</echo>
                                        <replace token="8080"
                                            value="8080"
                                            dir="${glassfish.root}/glassfish7/glassfish/domains/domain1/config/"
                                            summary="yes">
                                            <include name="domain.xml" />
                                        </replace>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <glassfish.home>${glassfish.root}/glassfish7</glassfish.home>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>glassfish-ci-managed-update</id>

            <properties>
                <glassfish.root>${maven.multiModuleProjectDirectory}/target</glassfish.root>
            </properties>

            <dependencies>
                <!-- The actual Arquillian connector -->
                <dependency>
                    <groupId>org.omnifaces.arquillian</groupId>
                    <artifactId>arquillian-glassfish-server-managed</artifactId>
                    <version>1.0</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${glassfish.root}</outputDirectory>
                                    <markersDirectory>${glassfish.root}/dependency-maven-plugin-markers</markersDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.glassfish.main.distributions</groupId>
                                            <artifactId>glassfish</artifactId>
                                            <version>${glassfish.version}</version>
                                            <type>zip</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${glassfish.root}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>jakarta.security.enterprise</groupId>
                                            <artifactId>jakarta.security.enterprise-api</artifactId>
                                            <version>${security-api.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${glassfish.root}/glassfish7/glassfish/modules</outputDirectory>
                                            <destFileName>jakarta.security.enterprise-api.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.glassfish.soteria</groupId>
                                            <artifactId>jakarta.security.enterprise</artifactId>
                                            <version>${soteria.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${glassfish.root}/glassfish7/glassfish/modules</outputDirectory>
                                            <destFileName>jakarta.security.enterprise.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.glassfish.soteria</groupId>
                                            <artifactId>soteria.spi.bean.decorator.weld</artifactId>
                                            <version>${weld-decorator.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${glassfish.root}/glassfish7/glassfish/modules</outputDirectory>
                                            <destFileName>soteria.spi.bean.decorator.weld.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <glassfish.home>${glassfish.root}/glassfish7</glassfish.home>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        
        
        
        
        
       
        
        <!-- 
            Updates the Payara server that's used for the "payara-ci-managed" profile with the
            Soteria core and Soteria SPI bundles  
        
        -->
        <profile>
            <id>payara-ci-managed-update</id>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Update Payara - replace jars</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${session.executionRootDirectory}/target/payara6/glassfish/modules</outputDirectory>
                                    <stripVersion>true</stripVersion>
                                    <overWrite>true</overWrite>
                                    <markersDirectory>${session.executionRootDirectory}/target/dependency-maven-plugin-markers</markersDirectory>
                                    <artifactItems>
                                        <!-- New version of Soteria core  -->
                                        <artifactItem>
                                            <groupId>org.glassfish.soteria</groupId>
                                            <artifactId>jakarta.security.enterprise</artifactId>
                                            <version>${project.version}</version>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${session.executionRootDirectory}/target/payara6/glassfish/modules</outputDirectory>
                                        </artifactItem>
                                        <!-- New version of Soteria Weld SPI -->
                                        <artifactItem>
                                            <groupId>org.glassfish.soteria</groupId>
                                            <artifactId>soteria.spi.bean.decorator.weld</artifactId>
                                            <version>${project.version}</version>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${session.executionRootDirectory}/target/payara6/glassfish/modules</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>Update Payara - delete jars</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <property name="antProperty" value="${foo}"/>
                                        <echo>deleting ${antProperty}/target/payara6/glassfish/modules/microprofile-jwt-auth.jar</echo>
                                        <delete file="${session.executionRootDirectory}/target/payara6/glassfish/modules/microprofile-jwt-auth.jar" verbose="true"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
                </build>
         </profile>
        
        
        <!-- 
            Downloads, installs and runs the version of Payara set by ${payara.version}
            Combine with the "payara-ci-managed-update" profile to update this to the jars
            build by this project.
         -->
        <profile>
            <id>payara-ci-managed</id>

            <dependencies>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee8</artifactId>
                </dependency>
        
                <!-- The actual Arquillian connector -->
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-managed</artifactId>
                    <version>${arquillian-payara-server-managed.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${session.executionRootDirectory}/target</outputDirectory>
                                    <markersDirectory>${session.executionRootDirectory}/target/dependency-maven-plugin-markers</markersDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.distributions</groupId>
                                            <artifactId>payara</artifactId>
                                            <version>${payara.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <excludes>
                                                **/microprofile-jwt-auth.jar
                                            </excludes>
                                            <outputDirectory>${session.executionRootDirectory}/target</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <environmentVariables>
                                <GLASSFISH_HOME>${session.executionRootDirectory}/target/payara6</GLASSFISH_HOME>
                            </environmentVariables>
                            <!-- This needs tuning -->
                            <systemPropertyVariables>
                                <glassfishRemote_gfHome>${session.executionRootDirectory}/target/payara6</glassfishRemote_gfHome>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>payara-embedded</id>

            <dependencies>
                <dependency>
                    <groupId>fish.payara.extras</groupId>
                    <artifactId>payara-embedded-all</artifactId>
                    <version>${payara.version}</version>
                    <scope>test</scope>
                </dependency>

                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-glassfish-embedded-3.1</artifactId>
                    <version>${arquillian-glassfish-embedded-3.1.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>payara-remote</id>
            
            <dependencies>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee8</artifactId>
                </dependency>
                <dependency>
                    <groupId>jakarta.ws.rs</groupId>
                    <artifactId>jakarta.ws.rs-api</artifactId>
                    <version>2.1.6</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-remote</artifactId>
                    <version>${arquillian-payara-server-managed.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        
         <profile>
            <id>glassfish-remote</id>
            
            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-glassfish-remote-3.1</artifactId>
                    <version>${arquillian-glassfish-remote-3.1.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                   <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-failsafe-plugin</artifactId>
                      <version>${failsafe-plugin.version}</version>
                      <executions>
                        <execution>
                          <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                          </goals>
                        </execution>
                      </executions>
                      <configuration>
                        <systemPropertyVariables>
                          <finalName>${project.build.finalName}</finalName>
                        </systemPropertyVariables>
                        <environmentVariables>
                          <GLASSFISH_HOME>${env.S1AS_HOME}/..</GLASSFISH_HOME>
                        </environmentVariables>
                      </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>glassfish</id>
            
           <repositories>
                <repository>
                    <id>glassfish Promoted</id>
                    <url>https://maven.java.net/content/repositories/promoted/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>
            
            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-glassfish-managed-3.1</artifactId>
                    <version>${arquillian-glassfish-managed-3.1.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.glassfish.main.distributions</groupId>
                                            <artifactId>glassfish</artifactId>
                                            <version>${glassfish.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${failsafe-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <environmentVariables>
                                <GLASSFISH_HOME>${project.build.directory}/glassfish6</GLASSFISH_HOME>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
       
        <profile>
            <id>wildfly</id>

            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>${wildfly-arquillian-container-managed.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${failsafe-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <finalName>${project.build.finalName}</finalName>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            </systemPropertyVariables>
                            <environmentVariables>
                                <JBOSS_HOME>${project.build.directory}/wildfly-${wildfly.version}</JBOSS_HOME>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>tomee</id>

            <repositories>
                <repository>
                    <id>apache.snapshots</id>
                    <url>https://repository.apache.org/content/repositories/snapshots/</url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>payara-patched-eclipse</id>
                    <url>https://raw.github.com/payara/Payara_PatchedProjects/eclipse/</url>
                </repository>
            </repositories>

            <dependencies>
                <dependency>
                    <groupId>org.apache.tomee</groupId>
                    <artifactId>apache-tomee</artifactId>
                    <version>${tomee.version}</version>
                    <type>zip</type>
                    <classifier>plus</classifier>
                    <scope>test</scope>
                </dependency>

                <dependency>
                    <groupId>org.apache.tomee</groupId>
                    <artifactId>arquillian-tomee-remote</artifactId>
                    <version>${tomee.version}</version>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.apache.tomee</groupId>
                            <artifactId>arquillian-openejb-transaction-provider</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <argLine>-DTOMEE_LOCK_FILE=${user.dir}/.tomee-ports.lock</argLine>
                            <systemPropertyVariables>
                                <tomee.stopPort>-1</tomee.stopPort>
                                <tomee.httpPort>-1</tomee.httpPort>
                                <tomee.httpsPort>-1</tomee.httpsPort>
                                <tomee.ajpPort>-1</tomee.ajpPort>

                                <tomee.dir>target/tomee/server</tomee.dir>
                                <tomee.appWorkingDir>target/tomee/arquillian</tomee.appWorkingDir>
                                <tomee.cleanOnStartUp>true</tomee.cleanOnStartUp>
                                <tomee.classifier>plus</tomee.classifier>
                                <tomee.properties>
                                    openejb.environment.default=true
                                    javax.security.jacc.policy.provider=org.omnifaces.jaccprovider.TestPolicy
                                    javax.security.jacc.PolicyConfigurationFactory.provider=org.omnifaces.jaccprovider.TestPolicyConfigurationFactory
                                </tomee.properties>
                                <!--<tomee.serverXml>../common/src/main/resources/tomee_server.xml</tomee.serverXml>-->
                                <tomee.conf>../common/src/main/resources/tomee</tomee.conf>
                                <tomee.additionalLibs>
                                    target/jacc-provider-tomee-bridge-0.3.jar
                                    target/jacc-provider-0.3.jar
                                    target/catalina.jar
                                </tomee.additionalLibs>
                                <tomee.cleanOnStartUp>false</tomee.cleanOnStartUp>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Patch TomEE</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <!-- JACC Provider -->
                                        <artifactItem>
                                            <groupId>org.omnifaces</groupId>
                                            <artifactId>jacc-provider</artifactId>
                                            <version>${jacc-provider.version}</version>
                                            <type>jar</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                        <!-- Patch some JACC issues -->
                                        <artifactItem>
                                            <groupId>org.omnifaces</groupId>
                                            <artifactId>jacc-provider-tomee-bridge</artifactId>
                                            <version>${jacc-provider.version}</version>
                                            <type>jar</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                        <!-- Catalina patch for JASPIC issue -->
                                        <artifactItem>
                                            <groupId>org.apache.tomcat</groupId>
                                            <artifactId>tomcat-catalina</artifactId>
                                            <version>8.5-SNAPSHOT</version>
                                            <type>jar</type>
                                            <overWrite>false</overWrite>
                                            <destFileName>catalina.jar</destFileName>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>openliberty</id>

            <repositories>
                <repository>
                    <id>payara-patched-eclipse</id>
                    <url>https://raw.github.com/payara/Payara_PatchedProjects/eclipse/</url>
                </repository>
            </repositories>

            <dependencies>
                <dependency>
                    <groupId>io.openliberty.arquillian</groupId>
                    <artifactId>arquillian-liberty-managed</artifactId>
                    <version>1.0.0</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>io.openliberty</groupId>
                                            <artifactId>openliberty-runtime</artifactId>
                                            <version>${openliberty.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.omnifaces</groupId>
                                            <artifactId>jacc-provider-liberty-bundle</artifactId>
                                            <version>${jacc-provider.version}</version>
                                            <type>jar</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}/jacc-provider-liberty-bundle</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.omnifaces</groupId>
                                            <artifactId>jacc-provider-liberty-bundle</artifactId>
                                            <version>0.2</version>
                                            <type>jar</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.1</version>
                        <executions>
                            <execution>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <!--  there has to be a better way... -->
                                        <echo>Configuring server</echo>
                                        <copy file="${project.build.directory}/jacc-provider-liberty-bundle/META-INF/testjacc.mf" tofile="${project.build.directory}/wlp/usr/extension/lib/features/testjacc.mf" />
                                        <copy file="${project.build.directory}/jacc-provider-liberty-bundle-${jacc-provider.version}.jar" tofile="${project.build.directory}/wlp/usr/extension/lib/testjacc.jar" />
                                        <copy file="../common/src/main/resources/server.xml" tofile="${project.build.directory}/wlp/templates/servers/defaultServer/server.xml" failOnError="false" />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.19.1</version>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.server>liberty</arquillian.server>
                                <arquillian.launch>liberty</arquillian.launch>
                                <arquillian.liberty.wlpHome>${project.build.directory}/wlp</arquillian.liberty.wlpHome>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>wildfly-docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.33.0</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>wildfly</alias>
                                    <name>soteria-samples/${project.artifactId}:wildfly</name>
                                    <build>
                                        <maintainer>Ivar Grimstad (ivar.grimstad@gmail.com)</maintainer>
                                        <from>jboss/wildfly:10.1.0.Final</from>
                                        <assembly>
                                            <basedir>/opt/jboss/wildfly/standalone/deployments/</basedir>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                    </build>
                                    <run>
                                        <ports>
                                            <port>8088:8080</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>payara-docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>payara</alias>
                                    <name>soteria-samples/${project.artifactId}:payara</name>
                                    <build>
                                        <maintainer>Ivar Grimstad (ivar.grimstad@gmail.com)</maintainer>
                                        <from>payara/server-web:163</from>
                                        <assembly>
                                            <basedir>/opt/payara41/glassfish/domains/domain1/autodeploy/</basedir>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                        <entryPoint>
                                            <arg>/opt/payara41/bin/asadmin</arg>
                                            <arg>start-domain</arg>
                                            <arg>-v</arg>
                                        </entryPoint>
                                    </build>
                                    <run>
                                        <ports>
                                            <port>8089:8080</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
